""" Use Ollivier Ricci curvature + TDA to analyze a set of Mappers generated by a hyperparameter grid search."""
import numpy as np
from gtda.diagrams import PairwiseDistance
from utils import (
    read_curvature_results,
    convert_to_gtda,
    get_diagrams,
    plot_dendrogram,
)

from sklearn.cluster import AgglomerativeClustering


def curvature_metric(metric="bottleneck"):
    diagrams = get_diagrams()
    curvature_dgms = convert_to_gtda(diagrams.values())
    distance_metric = PairwiseDistance(metric=metric)
    distance_metric.fit(curvature_dgms)
    distances = distance_metric.transform(curvature_dgms)
    return distances


def cluster_hyperparams(clusterer):
    pass


distances = curvature_metric()
model = AgglomerativeClustering(
    affinity="precomputed", linkage="single", compute_distances=True
)
model.fit(distances)

plot_dendrogram(model, truncate_mode="level", p=3)
